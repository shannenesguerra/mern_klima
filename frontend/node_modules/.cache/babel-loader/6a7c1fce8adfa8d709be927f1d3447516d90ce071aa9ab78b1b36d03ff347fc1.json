{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SHANNEN\\\\Klima Website 2\\\\klima_website\\\\frontend\\\\src\\\\components\\\\protected-route.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  type\n}) => {\n  // Check for token if route requires token authentication\n  if (type === 'token') {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      // Redirect to login if token is missing\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  // Check for OTP verification if route requires OTP verification\n  if (type === 'otpVerified') {\n    const otpVerified = sessionStorage.getItem('otpVerified'); // Assume 'otpVerified' is set after OTP validation\n    if (!otpVerified) {\n      // Redirect to OTP verification if otpVerified is missing\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/forgotpass\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","type","token","sessionStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","otpVerified","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/SHANNEN/Klima Website 2/klima_website/frontend/src/components/protected-route.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, type }) => {\r\n    // Check for token if route requires token authentication\r\n    if (type === 'token') {\r\n        const token = sessionStorage.getItem('token');\r\n        if (!token) {\r\n            // Redirect to login if token is missing\r\n            return <Navigate to=\"/login\" replace />;\r\n        }\r\n    }\r\n\r\n    // Check for OTP verification if route requires OTP verification\r\n    if (type === 'otpVerified') {\r\n        const otpVerified = sessionStorage.getItem('otpVerified'); // Assume 'otpVerified' is set after OTP validation\r\n        if (!otpVerified) {\r\n            // Redirect to OTP verification if otpVerified is missing\r\n            return <Navigate to=\"/forgotpass\" replace />;\r\n        }\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAC3C;EACA,IAAIA,IAAI,KAAK,OAAO,EAAE;IAClB,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,IAAI,CAACF,KAAK,EAAE;MACR;MACA,oBAAOJ,OAAA,CAACF,QAAQ;QAACS,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC3C;EACJ;;EAEA;EACA,IAAIT,IAAI,KAAK,aAAa,EAAE;IACxB,MAAMU,WAAW,GAAGR,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3D,IAAI,CAACO,WAAW,EAAE;MACd;MACA,oBAAOb,OAAA,CAACF,QAAQ;QAACS,EAAE,EAAC,aAAa;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChD;EACJ;EAEA,OAAOV,QAAQ;AACnB,CAAC;AAACY,EAAA,GApBIb,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}