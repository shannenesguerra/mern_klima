{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SHANNEN\\\\Klima Website 2\\\\klima_website\\\\frontend\\\\src\\\\components\\\\signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport arrow from '../img/arrow.png';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);\n  const [isOtpModalOpen, setIsOtpModalOpen] = useState(false);\n  const [otp, setOtp] = useState(Array(6).fill('')); // Initialize OTP array for 6 digits\n  const navigate = useNavigate();\n  const validatePassword = password => {\n    const lengthCheck = password.length >= 8;\n    const lowercaseCheck = /[a-z]/.test(password);\n    const uppercaseCheck = /[A-Z]/.test(password);\n    const numberCheck = /[0-9]/.test(password);\n    const specialCharCheck = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    return lengthCheck && lowercaseCheck && uppercaseCheck && numberCheck && specialCharCheck;\n  };\n  const handleSignup = async event => {\n    event.preventDefault();\n    setUsernameError('');\n    setPasswordError('');\n    setConfirmPasswordError('');\n    if (password !== confirmPassword) {\n      setConfirmPasswordError(\"Passwords do not match!\");\n      return;\n    }\n    if (!validatePassword(password)) {\n      setPasswordError(\"Password must be at least 8 characters long and include a mix of lowercase and uppercase letters, numbers, and special symbols.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsSignupModalOpen(true);\n        setTimeout(() => {\n          setIsSignupModalOpen(false);\n          setIsOtpModalOpen(true);\n        }, 3000);\n      } else if (data.message === 'Username is taken') {\n        setUsernameError('Username is already taken.');\n      } else {\n        setPasswordError(`Signup failed: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setPasswordError('Signup failed. Please try again later.');\n    }\n  };\n  const handleOtpVerification = async () => {\n    try {\n      const otpCode = otp.join(''); // Convert array to string\n      const response = await fetch('http://localhost:5000/api/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp: otpCode\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsOtpModalOpen(false);\n        navigate('/login');\n      } else {\n        alert(`OTP verification failed: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('OTP verification failed. Please try again later.');\n    }\n  };\n  const handleOtpChange = (index, value) => {\n    if (/^\\d*$/.test(value) && value.length <= 1) {\n      const newOtp = [...otp];\n      newOtp[index] = value;\n      setOtp(newOtp);\n      // Move to the next input if the current one is filled\n      if (value && index < otp.length - 1) {\n        document.getElementById(`otp-input-${index + 1}`).focus();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background_signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        id: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"signup section\",\n          id: \"signup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup_container\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"signup_form\",\n              onSubmit: handleSignup,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"signup_title\",\n                children: \"SIGN UP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"user_txtbox\",\n                placeholder: \"USERNAME\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"email_txtbox\",\n                placeholder: \"EMAIL\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"pass_txtbox\",\n                placeholder: \"PASSWORD\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"confirmpass_txtbox\",\n                placeholder: \"CONFIRM PASSWORD\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), usernameError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_text\",\n                children: usernameError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 35\n              }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_text\",\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 35\n              }, this), confirmPasswordError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_text\",\n                children: confirmPasswordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"signupbtn\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: arrow,\n                  alt: \"Arrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"login_btn\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/login\",\n                  children: \"ALREADY HAVE AN ACCOUNT?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), isSignupModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal_title\",\n            children: \"Signup Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal_phrase\",\n            children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [username, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 52\n            }, this), \" Redirecting to OTP verification...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), isOtpModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal_title\",\n            children: \"OTP Verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal_phrase\",\n            children: [\"Enter the OTP sent to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 65\n            }, this), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"otp-input-container\",\n            children: otp.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `otp-input-${index}`,\n              value: digit,\n              onChange: e => handleOtpChange(index, e.target.value),\n              maxLength: 1,\n              className: \"otp-input\",\n              placeholder: \"0\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOtpVerification,\n            className: \"verify_button\",\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"a8MqyVq5t5WZIJGKWEQvtyhlKz0=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","arrow","useNavigate","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","usernameError","setUsernameError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","isSignupModalOpen","setIsSignupModalOpen","isOtpModalOpen","setIsOtpModalOpen","otp","setOtp","Array","fill","navigate","validatePassword","lengthCheck","length","lowercaseCheck","test","uppercaseCheck","numberCheck","specialCharCheck","handleSignup","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","message","error","console","handleOtpVerification","otpCode","join","alert","handleOtpChange","index","value","newOtp","document","getElementById","focus","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","e","target","required","src","alt","href","map","digit","maxLength","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/SHANNEN/Klima Website 2/klima_website/frontend/src/components/signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport arrow from '../img/arrow.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css/signup.css';\r\n\r\nconst Signup = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\r\n  const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);\r\n  const [isOtpModalOpen, setIsOtpModalOpen] = useState(false);\r\n  const [otp, setOtp] = useState(Array(6).fill('')); // Initialize OTP array for 6 digits\r\n  const navigate = useNavigate();\r\n\r\n  const validatePassword = (password) => {\r\n    const lengthCheck = password.length >= 8;\r\n    const lowercaseCheck = /[a-z]/.test(password);\r\n    const uppercaseCheck = /[A-Z]/.test(password);\r\n    const numberCheck = /[0-9]/.test(password);\r\n    const specialCharCheck = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n    return lengthCheck && lowercaseCheck && uppercaseCheck && numberCheck && specialCharCheck;\r\n  };\r\n\r\n  const handleSignup = async (event) => {\r\n    event.preventDefault();\r\n    setUsernameError('');\r\n    setPasswordError('');\r\n    setConfirmPasswordError('');\r\n\r\n    if (password !== confirmPassword) {\r\n      setConfirmPasswordError(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      setPasswordError(\r\n        \"Password must be at least 8 characters long and include a mix of lowercase and uppercase letters, numbers, and special symbols.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/signup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, email, password })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setIsSignupModalOpen(true);\r\n        setTimeout(() => {\r\n          setIsSignupModalOpen(false);\r\n          setIsOtpModalOpen(true);\r\n        }, 3000);\r\n      } else if (data.message === 'Username is taken') {\r\n        setUsernameError('Username is already taken.');\r\n      } else {\r\n        setPasswordError(`Signup failed: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setPasswordError('Signup failed. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleOtpVerification = async () => {\r\n    try {\r\n      const otpCode = otp.join(''); // Convert array to string\r\n      const response = await fetch('http://localhost:5000/api/verify-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, otp: otpCode })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setIsOtpModalOpen(false);\r\n        navigate('/login');\r\n      } else {\r\n        alert(`OTP verification failed: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('OTP verification failed. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleOtpChange = (index, value) => {\r\n    if (/^\\d*$/.test(value) && (value.length <= 1)) {\r\n      const newOtp = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n      // Move to the next input if the current one is filled\r\n      if (value && index < otp.length - 1) {\r\n        document.getElementById(`otp-input-${index + 1}`).focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"background_signup\">\r\n      <div className=\"signup\">\r\n        <header className=\"header\" id=\"header\">\r\n          <div className=\"logo_img\"></div>\r\n        </header>\r\n\r\n        <main className=\"main\">\r\n          <section className=\"signup section\" id=\"signup\">\r\n            <div className=\"signup_container\">\r\n              <form className=\"signup_form\" onSubmit={handleSignup}>\r\n                <h2 className=\"signup_title\">SIGN UP</h2>\r\n                <input\r\n                  type=\"text\"\r\n                  className='user_txtbox'\r\n                  placeholder=\"USERNAME\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  className='email_txtbox'\r\n                  placeholder=\"EMAIL\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  className='pass_txtbox'\r\n                  placeholder=\"PASSWORD\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  className='confirmpass_txtbox'\r\n                  placeholder=\"CONFIRM PASSWORD\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  required\r\n                />\r\n                {usernameError && <p className=\"error_text\">{usernameError}</p>}\r\n                {passwordError && <p className=\"error_text\">{passwordError}</p>}\r\n                {confirmPasswordError && <p className=\"error_text\">{confirmPasswordError}</p>}\r\n\r\n                <button type=\"submit\" className=\"signupbtn\">\r\n                  <img src={arrow} alt=\"Arrow\" />\r\n                </button>\r\n                <p className=\"login_btn\"><a href=\"/login\">ALREADY HAVE AN ACCOUNT?</a></p>\r\n              </form>\r\n            </div>\r\n          </section>\r\n        </main>\r\n\r\n        {/* Signup success modal */}\r\n        {isSignupModalOpen && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal_content\">\r\n              <h3 className='modal_title'>Signup Successful!</h3>\r\n              <p className='modal_phrase'>Welcome, <strong>{username}!</strong> Redirecting to OTP verification...</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* OTP verification modal */}\r\n        {isOtpModalOpen && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal_content\">\r\n              <h3 className='modal_title'>OTP Verification</h3>\r\n              <p className='modal_phrase'>Enter the OTP sent to <strong>{email}</strong>:</p>\r\n              <div className=\"otp-input-container\">\r\n                {otp.map((digit, index) => (\r\n                  <input\r\n                    key={index}\r\n                    type=\"text\"\r\n                    id={`otp-input-${index}`}\r\n                    value={digit}\r\n                    onChange={(e) => handleOtpChange(index, e.target.value)}\r\n                    maxLength={1}\r\n                    className=\"otp-input\"\r\n                    placeholder=\"0\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              <button onClick={handleOtpVerification} className='verify_button'>Verify OTP</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}